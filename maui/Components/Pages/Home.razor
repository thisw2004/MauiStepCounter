@page "/home"
@using maui.components.ViewModels
@using maui.Components.Models
@inject StepgoalViewModel ViewModel
@inject IJSRuntime JSRuntime

@using System.Globalization
@using Plugin.LocalNotification

<h1>Home</h1>

<p>Today it is:</p>

@{
    CultureInfo originalCulture = CultureInfo.CurrentCulture;
    CultureInfo.CurrentCulture = new CultureInfo("en-US");
    string today = DateTime.Today.ToString("dddd, dd MMMM yyyy");
    CultureInfo.CurrentCulture = originalCulture; // Reset to the original culture if needed
}

<h2>@today</h2>

<p>Number of steps walked: @ViewModel.NumberOfSteps</p>
<p>Steps remaining to reach goal: @ViewModel.StepsRemaining</p>

@if (ViewModel.StepsRemaining <= 0)
{
    <p>You have reached your goal!</p>
}
else
{
    <p>Keep going!</p>
}

<p>Your step goals for today:</p>

@if (!ViewModel.IsSuccessful)
{
    <p>Error fetching step goals. Please try again later.</p>
    <button @onclick="ViewModel.DeleteTodaysGoals">Delete Today's Goals</button>
}
else
{
    if (ViewModel.AllStepgoals?.Any(sg => sg.Date.Date == DateTime.Today.Date) == true)
    {
        <ul>
            @foreach (var goal in ViewModel.AllStepgoals.Where(sg => sg.Date.Date == DateTime.Today.Date))
            {
                <li>
                    @goal.Progress / @goal.Goal steps
                </li>
            }
        </ul>
        @if (ViewModel.AllStepgoals.Count > 1)
        {
            <button @onclick="ViewModel.DeleteTodaysGoals">Delete Today's Goals</button>
            <button><a href="/UpdateStepgoal">Modify goal</a></button>
        }
    }
    else
    {
        <p>No step goals set for today. Wanna set a goal?</p>
        <button><a href="/AddStepgoal">Add goal for today!</a></button>
    }
}

@code {
    protected override async Task OnInitializedAsync()
    {
        await ViewModel.LoadTodayStepgoalsAndStartCounting();
    }
}
